<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Katherines-MacBook-Pro.local" name="AddressTests" tests="6" errors="0" failures="1" skipped="0" time="0.019" timestamp="2022-06-15T15:54:16">
          <properties>
      <property name="java.specification.version" value="17"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/><property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/17.0.2/libexec/openjdk.jdk/Contents/Home/lib"/><property name="sun.java.command" value="/opt/homebrew/Cellar/sbt/1.6.2/libexec/bin/sbt-launch.jar"/><property name="jdk.debug" value="release"/><property name="sun.stderr.encoding" value="UTF-8"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2022-01-18"/><property name="java.home" value="/opt/homebrew/Cellar/openjdk/17.0.2/libexec/openjdk.jdk/Contents/Home"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="sun.stdout.encoding" value="UTF-8"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="17.0.2+0"/><property name="user.name" value="katherine"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="java.vendor.version" value="Homebrew"/><property name="java.io.tmpdir" value="/var/folders/dd/5j41t5_x5zs499t_jp9t_k0h0000gn/T/"/><property name="java.version" value="17.0.2"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="native.encoding" value="UTF-8"/><property name="java.library.path" value="/Users/katherine/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="Homebrew"/><property name="scala.ext.dirs" value="/Users/katherine/.sbt/1.0/java9-rt-ext-homebrew_17_0_2"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="java.class.path" value="/opt/homebrew/Cellar/sbt/1.6.2/libexec/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Homebrew"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Amsterdam"/><property name="java.vm.specification.version" value="17"/><property name="os.name" value="Mac OS X"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="NL"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/Users/katherine"/><property name="user.language" value="en"/><property name="sbt.script" value="/opt/homebrew/Cellar/sbt/1.6.2/libexec/bin/sbt"/><property name="swoval.tmpdir" value="/Users/katherine/.sbt/1.0"/><property name="jline.esc.timeout" value="0"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="path.separator" value=":"/><property name="os.version" value="12.2.1"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/><property name="user.dir" value="/Users/katherine/Desktop/Projecten/FP_exercises"/><property name="os.arch" value="aarch64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="17.0.2+0"/><property name="java.class.version" value="61.0"/>
    </properties>
          <testcase classname="AddressTests" name="Address tests Already good" time="0.005">
                      
                    </testcase><testcase classname="AddressTests" name="Address tests Edge cases" time="0.01">
                      <failure message="Address(Archipel,Some(26),Some(8-10),Some(3521AT),Utrecht,NL) did not equal Address(Archipel 26 8-10,None,None,Some(3521AT),Utrecht,NL)" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: Address(Archipel,Some(26),Some(8-10),Some(3521AT),Utrecht,NL) did not equal Address(Archipel 26 8-10,None,None,Some(3521AT),Utrecht,NL)
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:476)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:421)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1385)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:1460)
	at AddressTests.testFun$proxy2$1(addressTest.scala:41)
	at AddressTests.fun$proxy1$1$$anonfun$2(addressTest.scala:40)
	at org.scalatest.funspec.AnyFunSpecLike.org$scalatest$funspec$AnyFunSpecLike$ItWord$$_$applyImpl$$anonfun$1(AnyFunSpecLike.scala:158)
	at org.scalatest.Transformer.apply$$anonfun$1(Transformer.scala:22)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:31)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:21)
	at org.scalatest.funspec.AnyFunSpecLike$$anon$1.apply(AnyFunSpecLike.scala:481)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:138)
	at org.scalatest.funspec.AnyFunSpec.withFixture(AnyFunSpec.scala:1631)
	at org.scalatest.funspec.AnyFunSpecLike.invokeWithFixture$1(AnyFunSpecLike.scala:487)
	at org.scalatest.funspec.AnyFunSpecLike.runTest$$anonfun$1(AnyFunSpecLike.scala:491)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.funspec.AnyFunSpecLike.runTest(AnyFunSpecLike.scala:491)
	at org.scalatest.funspec.AnyFunSpecLike.runTest$(AnyFunSpecLike.scala:49)
	at org.scalatest.funspec.AnyFunSpec.runTest(AnyFunSpec.scala:1631)
	at org.scalatest.funspec.AnyFunSpecLike.runTests$$anonfun$1(AnyFunSpecLike.scala:524)
	at org.scalatest.SuperEngine.traverseSubNodes$2$$anonfun$1(Engine.scala:413)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:429)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine.traverseSubNodes$2$$anonfun$1(Engine.scala:427)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:429)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)
	at org.scalatest.funspec.AnyFunSpecLike.runTests(AnyFunSpecLike.scala:524)
	at org.scalatest.funspec.AnyFunSpecLike.runTests$(AnyFunSpecLike.scala:49)
	at org.scalatest.funspec.AnyFunSpec.runTests(AnyFunSpec.scala:1631)
	at org.scalatest.Suite.run(Suite.scala:1112)
	at org.scalatest.Suite.run$(Suite.scala:563)
	at org.scalatest.funspec.AnyFunSpec.org$scalatest$funspec$AnyFunSpecLike$$super$run(AnyFunSpec.scala:1631)
	at org.scalatest.funspec.AnyFunSpecLike.run$$anonfun$1(AnyFunSpecLike.scala:528)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:535)
	at org.scalatest.funspec.AnyFunSpecLike.run(AnyFunSpecLike.scala:528)
	at org.scalatest.funspec.AnyFunSpecLike.run$(AnyFunSpecLike.scala:49)
	at org.scalatest.funspec.AnyFunSpec.run(AnyFunSpec.scala:1631)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:318)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:513)
	at sbt.TestRunner.runTest$1(TestFramework.scala:146)
	at sbt.TestRunner.run(TestFramework.scala:161)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:324)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:284)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:324)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:324)
	at sbt.TestFunction.apply(TestFramework.scala:336)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:435)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:68)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:282)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)
	at sbt.Execute.work(Execute.scala:291)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:282)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
</failure>
                    </testcase><testcase classname="AddressTests" name="Address tests No house number in address" time="0.0">
                      
                    </testcase><testcase classname="AddressTests" name="Address tests Fixed" time="0.003">
                      
                    </testcase><testcase classname="AddressTests" name="Address tests Other country" time="0.001">
                      
                    </testcase><testcase classname="AddressTests" name="Address tests N/A addresses" time="0.0">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>